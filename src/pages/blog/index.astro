---
import Layout from '../../layouts/Layout.astro';
import Toolbar from '../../components/Toolbar.astro';
import { siteLinks } from '../../config/siteLinks';
import { getCollection, type CollectionEntry } from 'astro:content';
const posts = (await getCollection('blog')) as CollectionEntry<'blog'>[];
const allTags = Array.from(new Set(posts.flatMap((p) => p.data.tags ?? []))).sort();
const url = new URL(Astro.url);
const q = url.searchParams.get('q')?.toLowerCase() ?? '';
const tag = url.searchParams.get('tag') ?? '';
const filtered = posts
  .filter((p) => !p.data.draft)
  .filter((p) =>
    (!q || p.data.title.toLowerCase().includes(q) || p.data.description?.toLowerCase().includes(q)) &&
    (!tag || p.data.tags?.includes(tag))
  )
  .sort((a, b) => +new Date(b.data.pubDate) - +new Date(a.data.pubDate));

const pageSize = 6;
const page = Math.max(1, Number(url.searchParams.get('page') ?? '1'));
const totalPages = Math.max(1, Math.ceil(filtered.length / pageSize));
const paginated = filtered.slice((page - 1) * pageSize, page * pageSize);

// Pre-compute reading time (~200 wpm) for each post
const readTimes = Object.fromEntries(
  paginated.map(p => {
    const words = p.body?.split(/\s+/).filter(Boolean).length ?? 0;
    const minutes = Math.max(1, Math.round(words / 200));
    return [p.slug, minutes];
  })
);
---
<Layout
  title="Blog | Astro Basics"
  description="Notes on engineering, performance, and developer experience."
  canonical="https://your-site-url.com/blog"
  ogImage="/favicon.svg"
  showMobileThemeToolbar={false}
>
  <div class="hidden sm:block fixed right-2 top-2 z-50">
    <Toolbar />
  </div>
  <main class="site-section px-container bg-base-100/90 min-h-[100vh]">
    <div class="breadcrumbs text-sm">
      <ul>
        <li><a href="/">Home</a></li>
        <li>Blog</li>
      </ul>
    </div>
    <div class="sm:hidden mb-3">
      <Toolbar />
    </div>
    <h1 class="text-4xl md:text-5xl font-extrabold leading-tight mb-2">Blog</h1>
    <p class="text-lg md:text-xl opacity-80 font-medium leading-snug mb-6">Notes on engineering, performance, and developer experience.</p>

  <form class="flex flex-col sm:flex-row flex-wrap gap-3 sm:gap-4 items-stretch sm:items-center mt-2 mb-10" method="get">
      <input type="search" name="q" value={q} placeholder="Search posts..." class="input input-bordered w-full sm:max-w-xs" />
      <div class="flex flex-wrap gap-2">
        {allTags.map((t) => (
          <button
            type="submit"
            name="tag"
            value={t}
            class={`badge badge-outline cursor-pointer ${tag === t ? 'badge-primary' : ''}`}
            aria-pressed={tag === t}
          >
            {t}
          </button>
        ))}
        {tag && (
          <button type="submit" name="tag" value="" class="badge badge-error">Clear tag</button>
        )}
      </div>
  <button type="submit" class="btn btn-primary w-full sm:w-auto">Search</button>
    </form>

    <div class="mt-0 grid gap-8 md:gap-10 sm:grid-cols-2">
      {paginated.map((p) => {
        const href = `/blog/${p.slug}`;
        return (
          <a href={href} class="rounded-3xl shadow-xl bg-base-200/90 ring-1 ring-base-300/40 hover:scale-[1.025] hover:shadow-2xl transition-transform duration-150 overflow-hidden group">
            <div class="p-6 md:p-8">
              <h2 class="text-2xl font-bold mb-1 group-hover:text-primary transition-colors">{p.data.title}</h2>
              <div class="flex flex-wrap gap-4 items-center text-sm opacity-80 mb-2">
                <time datetime={new Date(p.data.pubDate).toISOString()}>{new Date(p.data.pubDate).toLocaleDateString()}</time>
                <span aria-label="Estimated reading time">â€¢ {readTimes[p.slug]} min read</span>
              </div>
              {p.data.description && <p class="opacity-80 mb-3">{p.data.description}</p>}
              {p.data.tags?.length ? (
                <div class="mt-2 flex flex-wrap gap-2 not-prose">
                  {p.data.tags.map((t: string) => (
                    <span class="badge badge-outline badge-md px-3 py-1.5 font-semibold tracking-wide" style="text-transform: none;">{t}</span>
                  ))}
                </div>
              ) : null}
            </div>
          </a>
        );
      })}
    </div>

    {/* Pagination controls */}
  <nav class="mt-14 flex justify-center gap-2">
      {Array.from({ length: totalPages }, (_, i) => (
        <a
          href={`?${[q && `q=${encodeURIComponent(q)}`, tag && `tag=${encodeURIComponent(tag)}`, `page=${i + 1}`].filter(Boolean).join('&')}`}
          class={`btn btn-sm ${page === i + 1 ? 'btn-primary' : 'btn-ghost'}`}
        >
          {i + 1}
        </a>
      ))}
    </nav>

    <div class="mt-16">
      <div class="rounded-3xl shadow-xl bg-base-200/90 ring-1 ring-base-300/40">
        <div class="p-6 md:p-8">
          <h2 class="text-2xl font-bold mb-2">Want updates?</h2>
          <p class="mb-4">Subscribe to the RSS feed once it's ready. For now, follow on GitHub or LinkedIn.</p>
          <div class="flex gap-3">
            <a href={siteLinks.github} class="btn btn-ghost" target="_blank">GitHub</a>
            <a href={siteLinks.linkedin} class="btn btn-outline" target="_blank">LinkedIn</a>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>
